// @noindex
desc: Pre-trigger Events
desc: Pre-trigger Events [zaibuyidao]

slider1:119<0,127,1>Advance CC number:
slider2:/zaibuyidao_articulation_map:simul-arts:Simultaneous Articulations Cfg:

@init
file_selected = -1;
MAX_NUM_NOTES = 128;
note_config_size = MAX_NUM_NOTES * 6; // Increase the size to accommodate both input and output
note_config[note_config_size]; // Declare the array with fixed size
memset(note_config, -1, note_config_size); // Initialize array elements to -1
last_note_in_file = -1;
lines_read = 0;

advance_samples = 1/1000 * srate; // 1毫秒, 将提前秒数转换为样本数
delay_samples = 1/1000 * srate; // 1毫秒的延迟,转换为样本数

@slider
file_selected != slider2 ? (
  file_selected = slider2;
  handle = file_open(slider2); // "/simul-arts.txt" 使用此路径将可以从插件根目录读取txt
  handle > 0 ? (
    line = #;
    lines_read = 0;
    config_index = 0; // 新增一个单独的计数器作为note_config的索引
    while(file_string(handle, line) > 0) (
      skip_line = strncmp(line, "//", 2) == 0 ? 1 : 0;
      !skip_line ? (
        lines_read += 1;
        match_bank_MSB = 0; match_bank_LSB = 0; match_program = 0;
        bank_MSB = 0; bank_LSB = 0; program = 0;
        str_pos = 0; field = 0;
        while (str_pos < strlen(line)) (
          c = str_getchar(line, str_pos);
          c == '=' ? field = 1 : 0;
          c == ',' ? (
            // 使用config_index作为note_config的索引,确保每个条目都有唯一的位置
            note_config[config_index] = match_bank_MSB;
            note_config[config_index + 1] = match_bank_LSB;
            note_config[config_index + 2] = match_program;
            note_config[config_index + 3] = bank_MSB;
            note_config[config_index + 4] = bank_LSB;
            note_config[config_index + 5] = program;
            config_index += 6; // 每存储一个完整的条目,将索引增加6
            bank_MSB = 0; bank_LSB = 0; program = 0;
          ) : 0;
          c >= '0' && c <= '9' ? (
            field == 0 ? (
              match_bank_MSB = match_bank_MSB * 10 + (c - '0');
              str_getchar(line, str_pos+1) == '-' ? (
                str_pos += 1;
                match_bank_LSB = str_getchar(line, str_pos+1) - '0';
                str_pos += 1;
                while (str_getchar(line, str_pos+1) >= '0' && str_getchar(line, str_pos+1) <= '9') (
                  match_bank_LSB = match_bank_LSB * 10 + (str_getchar(line, str_pos+1) - '0');
                  str_pos += 1;
                );
              );
              str_getchar(line, str_pos+1) == '-' ? (
                str_pos += 1;
                match_program = str_getchar(line, str_pos+1) - '0';
                str_pos += 1;
                while (str_getchar(line, str_pos+1) >= '0' && str_getchar(line, str_pos+1) <= '9') (
                  match_program = match_program * 10 + (str_getchar(line, str_pos+1) - '0');
                  str_pos += 1;
                );
              );
            ) : (
              bank_MSB = bank_MSB * 10 + (c - '0');
              str_getchar(line, str_pos+1) == '-' ? (
                str_pos += 1;
                bank_LSB = str_getchar(line, str_pos+1) - '0';
                str_pos += 1;
                while (str_getchar(line, str_pos+1) >= '0' && str_getchar(line, str_pos+1) <= '9') (
                  bank_LSB = bank_LSB * 10 + (str_getchar(line, str_pos+1) - '0');
                  str_pos += 1;
                );
              );
              str_getchar(line, str_pos+1) == '-' ? (
                str_pos += 1;
                program = str_getchar(line, str_pos+1) - '0';
                str_pos += 1;
                while (str_getchar(line, str_pos+1) >= '0' && str_getchar(line, str_pos+1) <= '9') (
                  program = program * 10 + (str_getchar(line, str_pos+1) - '0');
                  str_pos += 1;
                );
              );
            );
          ) : 0;
          str_pos += 1;
        );
        note_config[config_index] = match_bank_MSB;
        note_config[config_index + 1] = match_bank_LSB;
        note_config[config_index + 2] = match_program;
        note_config[config_index + 3] = bank_MSB;
        note_config[config_index + 4] = bank_LSB;
        note_config[config_index + 5] = program;
        config_index += 6;
        last_note_in_file = match_program;
      );
    );
    file_close(handle);
  ) : 0;
) : 0;

@block
bank_msb = -1;
bank_lsb = -1;
program = -1;
match_found = 0;

while(midirecv(offset, msg1, msg2, msg3)) (
  status = (msg1 & 0xF0); // Get the message type
  channel = (msg1 & 0x0F); // Get the MIDI channel

  // Check if the received message is a Control Change or Program Change
  (status == 0xB0 || status == 0xC0) ? (
    // Extract the controller number and value for Control Change messages
    controller = status == 0xB0 ? msg2 : -1;
    value = status == 0xB0 ? msg3 : msg2;

    // Update the bank and program values based on the received messages
    controller == 0 ? (
      bank_msb = value;
    ) : controller == 32 ? (
      bank_lsb = value;
    ) : status == 0xC0 ? (
      program = value;

      // Check if we have received a complete bank and program combination
      (bank_msb != -1 && bank_lsb != -1 && program != -1) ? (
        // Check if the received bank/program matches any entry in the config file
        matched_indices = 10000;
        match_count = 0;
        i = 0;
        while (i <= last_note_in_file) (
          note_index = i * 6;
          (note_config[note_index] == bank_msb && note_config[note_index + 1] == bank_lsb && note_config[note_index + 2] == program) ? (
            matched_indices[match_count] = i;
            match_count += 1;
          );
          i += 1;
        );

        // Send the matched bank/program combinations in order
        match_count > 0 ? (
          j = 0;
          while (j < match_count) (
            note_index = matched_indices[j] * 6;
            midisend(offset + j * delay_samples, 0xB0 | channel, 0, note_config[note_index + 3]); // Bank MSB
            midisend(offset + j * delay_samples, 0xB0 | channel, 32, note_config[note_index + 4]); // Bank LSB
            midisend(offset + j * delay_samples, 0xC0 | channel, note_config[note_index + 5], 0); // Program Change
            j += 1;
          );
          match_found = 1; // Set the flag to indicate a match was found
        ) : (
          // If no match found, passthrough the original Bank Select and Program Change events
          midisend(offset, 0xB0 | channel, 0, bank_msb);
          midisend(offset, 0xB0 | channel, 32, bank_lsb);
          midisend(offset, msg1, msg2, msg3);
        );

        // Reset the bank and program values
        bank_msb = -1;
        bank_lsb = -1;
        program = -1;
      ) : (
        // If the combination is not complete, passthrough the CC message
        midisend(offset, msg1, msg2, msg3);
      );
    ) : (
      // Passthrough other CC messages
      ((msg1 & 0xF0) == $xB0 && msg2 == slider1) ? (
        // 计算新的偏移量, 确保不会小于0
        new_offset = max(offset - advance_samples, 0);
        // 提前发送指定的CC消息
        midisend(new_offset, msg1, msg2, msg3);
      ) : (
        midisend(offset, msg1, msg2, msg3);
      );
    );
  ) : (
    // Passthrough other MIDI events
    midisend(offset, msg1, msg2, msg3);
  );
);

@gfx
gfx_set(1.0);
gfx_x = gfx_y = 8;
i = 0;
while (i < config_index && i < note_config_size) (
  gfx_printf("Received: %d-%d-%d, Sent: %d-%d-%d\n", 
    note_config[i], note_config[i+1], note_config[i+2],
    note_config[i+3], note_config[i+4], note_config[i+5]);
  gfx_y += 2;
  i += 6;
);
